plugins {
    id 'application'
}

bootJar.enabled = false
jar.enabled = true

dependencies {
    implementation(project(":common"))
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

/**
 * $ ./gradlew :lab:build-random-picker-jar -PmainClass=philo.random_picker.RandomPickerKt
 * $ java -jar lab/build/libs/lab-0.0.1-SNAPSHOT-plain.jar
 */
tasks.register('build-random-picker-jar', Jar) {
    if (project.hasProperty("mainClass")) {

        application.mainClass = project.getProperty("mainClass")

        jar {
            manifest {
                attributes(
                        'Main-Class': application.mainClass
                )
            }
            from {
                configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
            }
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        }
    } else {
        throw new GradleException('The mainClass property is not defined.')
    }
}

tasks.register('build-random-picker-auto-jar', Jar) {

    application.mainClass = 'philo.random_picker.RandomPickerKt'

    jar {
        manifest {
            attributes(
                    'Main-Class': application.mainClass
            )
        }
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
